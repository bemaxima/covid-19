[{"C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\App.tsx":"1","C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\index.tsx":"2","C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\components\\Table.tsx":"3","C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\utility\\api.ts":"4","C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\components\\CovidStatistics.tsx":"5","C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\reportWebVitals.ts":"6"},{"size":556,"mtime":1607593205092,"results":"7","hashOfConfig":"8"},{"size":468,"mtime":1607594319542,"results":"9","hashOfConfig":"8"},{"size":2985,"mtime":1607605627295,"results":"10","hashOfConfig":"8"},{"size":183,"mtime":1607595468416,"results":"11","hashOfConfig":"8"},{"size":2708,"mtime":1607606273229,"results":"12","hashOfConfig":"8"},{"size":425,"mtime":1607593205092,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nl6mbt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\App.tsx",[],"C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\index.tsx",[],"C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\components\\Table.tsx",["27","28","29"],"import React, { useEffect, useState } from 'react'\r\nimport { FixedSizeList as List } from 'react-window';\r\n\r\ninterface ColumnModel<T extends object> {\r\n  id: string;\r\n  name: string;\r\n  dataIndex: keyof T;\r\n  render?: (data: T[keyof T]) => JSX.Element;\r\n}\r\n\r\ninterface AbstractTableProps<T extends object> {\r\n  columns: ColumnModel<T>[];\r\n  data: T[];\r\n  loading: boolean;\r\n  keyField: keyof T;\r\n  showIndexer?: boolean;\r\n  LoadingComponent?: React.ComponentType<unknown>;\r\n  disablePagination?: boolean;\r\n  onNextPage?: () => void;\r\n  onPrevPage?: () => void;\r\n  pageIndex?: number;\r\n  pageSize?: number;\r\n  disableNext?: boolean;\r\n}\r\n\r\nexport default function AbstractTable<T extends object>({\r\n  showIndexer = false,\r\n  disablePagination = true,\r\n  keyField,\r\n  columns,\r\n  data,\r\n  loading,\r\n  LoadingComponent,\r\n  onNextPage,\r\n  onPrevPage,\r\n  pageIndex,\r\n  pageSize,\r\n  disableNext\r\n}: AbstractTableProps<T>) {\r\n  return (\r\n    <div>\r\n      <table style={{ border: 1 }}>\r\n        <thead>\r\n          <tr>\r\n            {showIndexer && <td>Index</td>}\r\n            {columns.map(col => (\r\n              <td key={col.id}>\r\n                {col.name}\r\n              </td>\r\n            ))}\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {!loading && <List\r\n          height={500}\r\n          itemCount={data.length}\r\n          itemSize={26}\r\n          width={600}\r\n        > */}\r\n          {/* {({ index, style }) => {\r\n            const item = data[index]\r\n            return (\r\n              <tr key={String(item[keyField])} style={style}>\r\n                {showIndexer && <td>{index + 1}</td>}\r\n                {columns.map(col => (\r\n                  <td key={col.id}>\r\n                    {col.render && col.render(item[col.dataIndex])}\r\n                    {!col.render && item[col.dataIndex]}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            )\r\n          }\r\n          }\r\n        </List>} */}\r\n          {!loading && data.map((item, index) => (\r\n            <tr key={String(item[keyField])}>\r\n              {showIndexer && <td>{disablePagination ? (index + 1) : (((pageIndex! - 1) * pageSize!) + index + 1)}</td>}\r\n              {columns.map(col => (\r\n                <td key={col.id}>\r\n                  {col.render && col.render(item[col.dataIndex])}\r\n                  {!col.render && item[col.dataIndex]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n          {loading && <tr>\r\n            <td colSpan={columns.length + (showIndexer ? 1 : 0)}>\r\n              {LoadingComponent && <LoadingComponent />}\r\n              {!LoadingComponent && \"Please wait ...\"}\r\n            </td>\r\n          </tr>}\r\n        </tbody>\r\n      </table>\r\n      {!disablePagination && !loading && <div className='pagination'>\r\n        <button disabled={pageIndex! === 1} onClick={onPrevPage}>Back</button>\r\n        <button disabled={disableNext!} onClick={onNextPage}>Next</button>\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\utility\\api.ts",[],"C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\components\\CovidStatistics.tsx",[],"C:\\Users\\Ehssan\\Desktop\\covid\\covid-ts\\src\\reportWebVitals.ts",[],{"ruleId":"30","severity":1,"message":"31","line":1,"column":17,"nodeType":"32","messageId":"33","endLine":1,"endColumn":26},{"ruleId":"30","severity":1,"message":"34","line":1,"column":28,"nodeType":"32","messageId":"33","endLine":1,"endColumn":36},{"ruleId":"30","severity":1,"message":"35","line":2,"column":27,"nodeType":"32","messageId":"33","endLine":2,"endColumn":31},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'List' is defined but never used."]